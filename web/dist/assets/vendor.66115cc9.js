const D=[];for(let g=0;g<256;g++)D[g]=(g<16?"0":"")+g.toString(16);function Pt(){const g=Math.random()*4294967295|0,t=Math.random()*4294967295|0,s=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(D[g&255]+D[g>>8&255]+D[g>>16&255]+D[g>>24&255]+"-"+D[t&255]+D[t>>8&255]+"-"+D[t>>16&15|64]+D[t>>24&255]+"-"+D[s&63|128]+D[s>>8&255]+"-"+D[s>>16&255]+D[s>>24&255]+D[i&255]+D[i>>8&255]+D[i>>16&255]+D[i>>24&255]).toUpperCase()}function U(g,t,s){return Math.max(t,Math.min(s,g))}function es(g,t){return(g%t+t)%t}function Ct(g,t,s){return(1-s)*g+s*t}class nt{constructor(t=0,s=0,i=0,e=1){this._x=t,this._y=s,this._z=i,this._w=e}static slerp(t,s,i,e){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(t,s,e)}static slerpFlat(t,s,i,e,r,n,h){let u=i[e+0],o=i[e+1],a=i[e+2],l=i[e+3];const c=r[n+0],x=r[n+1],m=r[n+2],d=r[n+3];if(h===0){t[s+0]=u,t[s+1]=o,t[s+2]=a,t[s+3]=l;return}if(h===1){t[s+0]=c,t[s+1]=x,t[s+2]=m,t[s+3]=d;return}if(l!==d||u!==c||o!==x||a!==m){let p=1-h;const f=u*c+o*x+a*m+l*d,_=f>=0?1:-1,F=1-f*f;if(F>Number.EPSILON){const b=Math.sqrt(F),A=Math.atan2(b,f*_);p=Math.sin(p*A)/b,h=Math.sin(h*A)/b}const M=h*_;if(u=u*p+c*M,o=o*p+x*M,a=a*p+m*M,l=l*p+d*M,p===1-h){const b=1/Math.sqrt(u*u+o*o+a*a+l*l);u*=b,o*=b,a*=b,l*=b}}t[s]=u,t[s+1]=o,t[s+2]=a,t[s+3]=l}static multiplyQuaternionsFlat(t,s,i,e,r,n){const h=i[e],u=i[e+1],o=i[e+2],a=i[e+3],l=r[n],c=r[n+1],x=r[n+2],m=r[n+3];return t[s]=h*m+a*l+u*x-o*c,t[s+1]=u*m+a*c+o*l-h*x,t[s+2]=o*m+a*x+h*c-u*l,t[s+3]=a*m-h*l-u*c-o*x,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,i,e){return this._x=t,this._y=s,this._z=i,this._w=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s){if(!(t&&t.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=t._x,e=t._y,r=t._z,n=t._order,h=Math.cos,u=Math.sin,o=h(i/2),a=h(e/2),l=h(r/2),c=u(i/2),x=u(e/2),m=u(r/2);switch(n){case"XYZ":this._x=c*a*l+o*x*m,this._y=o*x*l-c*a*m,this._z=o*a*m+c*x*l,this._w=o*a*l-c*x*m;break;case"YXZ":this._x=c*a*l+o*x*m,this._y=o*x*l-c*a*m,this._z=o*a*m-c*x*l,this._w=o*a*l+c*x*m;break;case"ZXY":this._x=c*a*l-o*x*m,this._y=o*x*l+c*a*m,this._z=o*a*m+c*x*l,this._w=o*a*l-c*x*m;break;case"ZYX":this._x=c*a*l-o*x*m,this._y=o*x*l+c*a*m,this._z=o*a*m-c*x*l,this._w=o*a*l+c*x*m;break;case"YZX":this._x=c*a*l+o*x*m,this._y=o*x*l+c*a*m,this._z=o*a*m-c*x*l,this._w=o*a*l-c*x*m;break;case"XZY":this._x=c*a*l-o*x*m,this._y=o*x*l-c*a*m,this._z=o*a*m+c*x*l,this._w=o*a*l+c*x*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+n)}return s!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const i=s/2,e=Math.sin(i);return this._x=t.x*e,this._y=t.y*e,this._z=t.z*e,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,i=s[0],e=s[4],r=s[8],n=s[1],h=s[5],u=s[9],o=s[2],a=s[6],l=s[10],c=i+h+l;if(c>0){const x=.5/Math.sqrt(c+1);this._w=.25/x,this._x=(a-u)*x,this._y=(r-o)*x,this._z=(n-e)*x}else if(i>h&&i>l){const x=2*Math.sqrt(1+i-h-l);this._w=(a-u)/x,this._x=.25*x,this._y=(e+n)/x,this._z=(r+o)/x}else if(h>l){const x=2*Math.sqrt(1+h-i-l);this._w=(r-o)/x,this._x=(e+n)/x,this._y=.25*x,this._z=(u+a)/x}else{const x=2*Math.sqrt(1+l-i-h);this._w=(n-e)/x,this._x=(r+o)/x,this._y=(u+a)/x,this._z=.25*x}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let i=t.dot(s)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(U(this.dot(t),-1,1)))}rotateTowards(t,s){const i=this.angleTo(t);if(i===0)return this;const e=Math.min(1,s/i);return this.slerp(t,e),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,s){return s!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,s)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const i=t._x,e=t._y,r=t._z,n=t._w,h=s._x,u=s._y,o=s._z,a=s._w;return this._x=i*a+n*h+e*o-r*u,this._y=e*a+n*u+r*h-i*o,this._z=r*a+n*o+i*u-e*h,this._w=n*a-i*h-e*u-r*o,this._onChangeCallback(),this}slerp(t,s){if(s===0)return this;if(s===1)return this.copy(t);const i=this._x,e=this._y,r=this._z,n=this._w;let h=n*t._w+i*t._x+e*t._y+r*t._z;if(h<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,h=-h):this.copy(t),h>=1)return this._w=n,this._x=i,this._y=e,this._z=r,this;const u=1-h*h;if(u<=Number.EPSILON){const x=1-s;return this._w=x*n+s*this._w,this._x=x*i+s*this._x,this._y=x*e+s*this._y,this._z=x*r+s*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(u),a=Math.atan2(o,h),l=Math.sin((1-s)*a)/o,c=Math.sin(s*a)/o;return this._w=n*l+this._w*c,this._x=i*l+this._x*c,this._y=e*l+this._y*c,this._z=r*l+this._z*c,this._onChangeCallback(),this}slerpQuaternions(t,s,i){this.copy(t).slerp(s,i)}random(){const t=Math.random(),s=Math.sqrt(1-t),i=Math.sqrt(t),e=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(s*Math.cos(e),i*Math.sin(r),i*Math.cos(r),s*Math.sin(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}nt.prototype.isQuaternion=!0;class y{constructor(t=0,s=0,i=0){this.x=t,this.y=s,this.z=i}set(t,s,i){return i===void 0&&(i=this.z),this.x=t,this.y=s,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,s){return s!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t,s){return s!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t,s){return s!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,s)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Yt.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(Yt.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,i=this.y,e=this.z,r=t.elements;return this.x=r[0]*s+r[3]*i+r[6]*e,this.y=r[1]*s+r[4]*i+r[7]*e,this.z=r[2]*s+r[5]*i+r[8]*e,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,i=this.y,e=this.z,r=t.elements,n=1/(r[3]*s+r[7]*i+r[11]*e+r[15]);return this.x=(r[0]*s+r[4]*i+r[8]*e+r[12])*n,this.y=(r[1]*s+r[5]*i+r[9]*e+r[13])*n,this.z=(r[2]*s+r[6]*i+r[10]*e+r[14])*n,this}applyQuaternion(t){const s=this.x,i=this.y,e=this.z,r=t.x,n=t.y,h=t.z,u=t.w,o=u*s+n*e-h*i,a=u*i+h*s-r*e,l=u*e+r*i-n*s,c=-r*s-n*i-h*e;return this.x=o*u+c*-r+a*-h-l*-n,this.y=a*u+c*-n+l*-r-o*-h,this.z=l*u+c*-h+o*-n-a*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,i=this.y,e=this.z,r=t.elements;return this.x=r[0]*s+r[4]*i+r[8]*e,this.y=r[1]*s+r[5]*i+r[9]*e,this.z=r[2]*s+r[6]*i+r[10]*e,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this}cross(t,s){return s!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,s)):this.crossVectors(this,t)}crossVectors(t,s){const i=t.x,e=t.y,r=t.z,n=s.x,h=s.y,u=s.z;return this.x=e*u-r*h,this.y=r*n-i*u,this.z=i*h-e*n,this}projectOnVector(t){const s=t.lengthSq();if(s===0)return this.set(0,0,0);const i=t.dot(this)/s;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return kt.copy(this).projectOnVector(t),this.sub(kt)}reflect(t){return this.sub(kt.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(s===0)return Math.PI/2;const i=this.dot(t)/s;return Math.acos(U(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y,e=this.z-t.z;return s*s+i*i+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,i){const e=Math.sin(s)*t;return this.x=e*Math.sin(i),this.y=Math.cos(s)*t,this.z=e*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,i){return this.x=t*Math.sin(s),this.y=i,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),e=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=i,this.z=e,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,s*4)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,s*3)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,s=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(s),this.y=i*Math.sin(s),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}y.prototype.isVector3=!0;const kt=new y,Yt=new nt;class L{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,s,i,e,r,n,h,u,o,a,l,c,x,m,d,p){const f=this.elements;return f[0]=t,f[4]=s,f[8]=i,f[12]=e,f[1]=r,f[5]=n,f[9]=h,f[13]=u,f[2]=o,f[6]=a,f[10]=l,f[14]=c,f[3]=x,f[7]=m,f[11]=d,f[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new L().fromArray(this.elements)}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],s[9]=i[9],s[10]=i[10],s[11]=i[11],s[12]=i[12],s[13]=i[13],s[14]=i[14],s[15]=i[15],this}copyPosition(t){const s=this.elements,i=t.elements;return s[12]=i[12],s[13]=i[13],s[14]=i[14],this}setFromMatrix3(t){const s=t.elements;return this.set(s[0],s[3],s[6],0,s[1],s[4],s[7],0,s[2],s[5],s[8],0,0,0,0,1),this}extractBasis(t,s,i){return t.setFromMatrixColumn(this,0),s.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,s,i){return this.set(t.x,s.x,i.x,0,t.y,s.y,i.y,0,t.z,s.z,i.z,0,0,0,0,1),this}extractRotation(t){const s=this.elements,i=t.elements,e=1/ht.setFromMatrixColumn(t,0).length(),r=1/ht.setFromMatrixColumn(t,1).length(),n=1/ht.setFromMatrixColumn(t,2).length();return s[0]=i[0]*e,s[1]=i[1]*e,s[2]=i[2]*e,s[3]=0,s[4]=i[4]*r,s[5]=i[5]*r,s[6]=i[6]*r,s[7]=0,s[8]=i[8]*n,s[9]=i[9]*n,s[10]=i[10]*n,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const s=this.elements,i=t.x,e=t.y,r=t.z,n=Math.cos(i),h=Math.sin(i),u=Math.cos(e),o=Math.sin(e),a=Math.cos(r),l=Math.sin(r);if(t.order==="XYZ"){const c=n*a,x=n*l,m=h*a,d=h*l;s[0]=u*a,s[4]=-u*l,s[8]=o,s[1]=x+m*o,s[5]=c-d*o,s[9]=-h*u,s[2]=d-c*o,s[6]=m+x*o,s[10]=n*u}else if(t.order==="YXZ"){const c=u*a,x=u*l,m=o*a,d=o*l;s[0]=c+d*h,s[4]=m*h-x,s[8]=n*o,s[1]=n*l,s[5]=n*a,s[9]=-h,s[2]=x*h-m,s[6]=d+c*h,s[10]=n*u}else if(t.order==="ZXY"){const c=u*a,x=u*l,m=o*a,d=o*l;s[0]=c-d*h,s[4]=-n*l,s[8]=m+x*h,s[1]=x+m*h,s[5]=n*a,s[9]=d-c*h,s[2]=-n*o,s[6]=h,s[10]=n*u}else if(t.order==="ZYX"){const c=n*a,x=n*l,m=h*a,d=h*l;s[0]=u*a,s[4]=m*o-x,s[8]=c*o+d,s[1]=u*l,s[5]=d*o+c,s[9]=x*o-m,s[2]=-o,s[6]=h*u,s[10]=n*u}else if(t.order==="YZX"){const c=n*u,x=n*o,m=h*u,d=h*o;s[0]=u*a,s[4]=d-c*l,s[8]=m*l+x,s[1]=l,s[5]=n*a,s[9]=-h*a,s[2]=-o*a,s[6]=x*l+m,s[10]=c-d*l}else if(t.order==="XZY"){const c=n*u,x=n*o,m=h*u,d=h*o;s[0]=u*a,s[4]=-l,s[8]=o*a,s[1]=c*l+d,s[5]=n*a,s[9]=x*l-m,s[2]=m*l-x,s[6]=h*a,s[10]=d*l+c}return s[3]=0,s[7]=0,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromQuaternion(t){return this.compose(rs,t,ns)}lookAt(t,s,i){const e=this.elements;return X.subVectors(t,s),X.lengthSq()===0&&(X.z=1),X.normalize(),J.crossVectors(i,X),J.lengthSq()===0&&(Math.abs(i.z)===1?X.x+=1e-4:X.z+=1e-4,X.normalize(),J.crossVectors(i,X)),J.normalize(),Mt.crossVectors(X,J),e[0]=J.x,e[4]=Mt.x,e[8]=X.x,e[1]=J.y,e[5]=Mt.y,e[9]=X.y,e[2]=J.z,e[6]=Mt.z,e[10]=X.z,this}multiply(t,s){return s!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,s)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,e=s.elements,r=this.elements,n=i[0],h=i[4],u=i[8],o=i[12],a=i[1],l=i[5],c=i[9],x=i[13],m=i[2],d=i[6],p=i[10],f=i[14],_=i[3],F=i[7],M=i[11],b=i[15],A=e[0],z=e[4],V=e[8],Y=e[12],w=e[1],E=e[5],C=e[9],k=e[13],W=e[2],B=e[6],O=e[10],tt=e[14],Q=e[3],T=e[7],q=e[11],I=e[15];return r[0]=n*A+h*w+u*W+o*Q,r[4]=n*z+h*E+u*B+o*T,r[8]=n*V+h*C+u*O+o*q,r[12]=n*Y+h*k+u*tt+o*I,r[1]=a*A+l*w+c*W+x*Q,r[5]=a*z+l*E+c*B+x*T,r[9]=a*V+l*C+c*O+x*q,r[13]=a*Y+l*k+c*tt+x*I,r[2]=m*A+d*w+p*W+f*Q,r[6]=m*z+d*E+p*B+f*T,r[10]=m*V+d*C+p*O+f*q,r[14]=m*Y+d*k+p*tt+f*I,r[3]=_*A+F*w+M*W+b*Q,r[7]=_*z+F*E+M*B+b*T,r[11]=_*V+F*C+M*O+b*q,r[15]=_*Y+F*k+M*tt+b*I,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[4]*=t,s[8]*=t,s[12]*=t,s[1]*=t,s[5]*=t,s[9]*=t,s[13]*=t,s[2]*=t,s[6]*=t,s[10]*=t,s[14]*=t,s[3]*=t,s[7]*=t,s[11]*=t,s[15]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[4],e=t[8],r=t[12],n=t[1],h=t[5],u=t[9],o=t[13],a=t[2],l=t[6],c=t[10],x=t[14],m=t[3],d=t[7],p=t[11],f=t[15];return m*(+r*u*l-e*o*l-r*h*c+i*o*c+e*h*x-i*u*x)+d*(+s*u*x-s*o*c+r*n*c-e*n*x+e*o*a-r*u*a)+p*(+s*o*l-s*h*x-r*n*l+i*n*x+r*h*a-i*o*a)+f*(-e*h*a-s*u*l+s*h*c+e*n*l-i*n*c+i*u*a)}transpose(){const t=this.elements;let s;return s=t[1],t[1]=t[4],t[4]=s,s=t[2],t[2]=t[8],t[8]=s,s=t[6],t[6]=t[9],t[9]=s,s=t[3],t[3]=t[12],t[12]=s,s=t[7],t[7]=t[13],t[13]=s,s=t[11],t[11]=t[14],t[14]=s,this}setPosition(t,s,i){const e=this.elements;return t.isVector3?(e[12]=t.x,e[13]=t.y,e[14]=t.z):(e[12]=t,e[13]=s,e[14]=i),this}invert(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],n=t[4],h=t[5],u=t[6],o=t[7],a=t[8],l=t[9],c=t[10],x=t[11],m=t[12],d=t[13],p=t[14],f=t[15],_=l*p*o-d*c*o+d*u*x-h*p*x-l*u*f+h*c*f,F=m*c*o-a*p*o-m*u*x+n*p*x+a*u*f-n*c*f,M=a*d*o-m*l*o+m*h*x-n*d*x-a*h*f+n*l*f,b=m*l*u-a*d*u-m*h*c+n*d*c+a*h*p-n*l*p,A=s*_+i*F+e*M+r*b;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const z=1/A;return t[0]=_*z,t[1]=(d*c*r-l*p*r-d*e*x+i*p*x+l*e*f-i*c*f)*z,t[2]=(h*p*r-d*u*r+d*e*o-i*p*o-h*e*f+i*u*f)*z,t[3]=(l*u*r-h*c*r-l*e*o+i*c*o+h*e*x-i*u*x)*z,t[4]=F*z,t[5]=(a*p*r-m*c*r+m*e*x-s*p*x-a*e*f+s*c*f)*z,t[6]=(m*u*r-n*p*r-m*e*o+s*p*o+n*e*f-s*u*f)*z,t[7]=(n*c*r-a*u*r+a*e*o-s*c*o-n*e*x+s*u*x)*z,t[8]=M*z,t[9]=(m*l*r-a*d*r-m*i*x+s*d*x+a*i*f-s*l*f)*z,t[10]=(n*d*r-m*h*r+m*i*o-s*d*o-n*i*f+s*h*f)*z,t[11]=(a*h*r-n*l*r-a*i*o+s*l*o+n*i*x-s*h*x)*z,t[12]=b*z,t[13]=(a*d*e-m*l*e+m*i*c-s*d*c-a*i*p+s*l*p)*z,t[14]=(m*h*e-n*d*e-m*i*u+s*d*u+n*i*p-s*h*p)*z,t[15]=(n*l*e-a*h*e+a*i*u-s*l*u-n*i*c+s*h*c)*z,this}scale(t){const s=this.elements,i=t.x,e=t.y,r=t.z;return s[0]*=i,s[4]*=e,s[8]*=r,s[1]*=i,s[5]*=e,s[9]*=r,s[2]*=i,s[6]*=e,s[10]*=r,s[3]*=i,s[7]*=e,s[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,s=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],e=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(s,i,e))}makeTranslation(t,s,i){return this.set(1,0,0,t,0,1,0,s,0,0,1,i,0,0,0,1),this}makeRotationX(t){const s=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,s,-i,0,0,i,s,0,0,0,0,1),this}makeRotationY(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,0,i,0,0,1,0,0,-i,0,s,0,0,0,0,1),this}makeRotationZ(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,-i,0,0,i,s,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,s){const i=Math.cos(s),e=Math.sin(s),r=1-i,n=t.x,h=t.y,u=t.z,o=r*n,a=r*h;return this.set(o*n+i,o*h-e*u,o*u+e*h,0,o*h+e*u,a*h+i,a*u-e*n,0,o*u-e*h,a*u+e*n,r*u*u+i,0,0,0,0,1),this}makeScale(t,s,i){return this.set(t,0,0,0,0,s,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,s,i,e,r,n){return this.set(1,i,r,0,t,1,n,0,s,e,1,0,0,0,0,1),this}compose(t,s,i){const e=this.elements,r=s._x,n=s._y,h=s._z,u=s._w,o=r+r,a=n+n,l=h+h,c=r*o,x=r*a,m=r*l,d=n*a,p=n*l,f=h*l,_=u*o,F=u*a,M=u*l,b=i.x,A=i.y,z=i.z;return e[0]=(1-(d+f))*b,e[1]=(x+M)*b,e[2]=(m-F)*b,e[3]=0,e[4]=(x-M)*A,e[5]=(1-(c+f))*A,e[6]=(p+_)*A,e[7]=0,e[8]=(m+F)*z,e[9]=(p-_)*z,e[10]=(1-(c+d))*z,e[11]=0,e[12]=t.x,e[13]=t.y,e[14]=t.z,e[15]=1,this}decompose(t,s,i){const e=this.elements;let r=ht.set(e[0],e[1],e[2]).length();const n=ht.set(e[4],e[5],e[6]).length(),h=ht.set(e[8],e[9],e[10]).length();this.determinant()<0&&(r=-r),t.x=e[12],t.y=e[13],t.z=e[14],N.copy(this);const o=1/r,a=1/n,l=1/h;return N.elements[0]*=o,N.elements[1]*=o,N.elements[2]*=o,N.elements[4]*=a,N.elements[5]*=a,N.elements[6]*=a,N.elements[8]*=l,N.elements[9]*=l,N.elements[10]*=l,s.setFromRotationMatrix(N),i.x=r,i.y=n,i.z=h,this}makePerspective(t,s,i,e,r,n){n===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const h=this.elements,u=2*r/(s-t),o=2*r/(i-e),a=(s+t)/(s-t),l=(i+e)/(i-e),c=-(n+r)/(n-r),x=-2*n*r/(n-r);return h[0]=u,h[4]=0,h[8]=a,h[12]=0,h[1]=0,h[5]=o,h[9]=l,h[13]=0,h[2]=0,h[6]=0,h[10]=c,h[14]=x,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,s,i,e,r,n){const h=this.elements,u=1/(s-t),o=1/(i-e),a=1/(n-r),l=(s+t)*u,c=(i+e)*o,x=(n+r)*a;return h[0]=2*u,h[4]=0,h[8]=0,h[12]=-l,h[1]=0,h[5]=2*o,h[9]=0,h[13]=-c,h[2]=0,h[6]=0,h[10]=-2*a,h[14]=-x,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const s=this.elements,i=t.elements;for(let e=0;e<16;e++)if(s[e]!==i[e])return!1;return!0}fromArray(t,s=0){for(let i=0;i<16;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t[s+9]=i[9],t[s+10]=i[10],t[s+11]=i[11],t[s+12]=i[12],t[s+13]=i[13],t[s+14]=i[14],t[s+15]=i[15],t}}L.prototype.isMatrix4=!0;const ht=new y,N=new L,rs=new y(0,0,0),ns=new y(1,1,1),J=new y,Mt=new y,X=new y;class Wt{addEventListener(t,s){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(s)===-1&&i[t].push(s)}hasEventListener(t,s){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(s)!==-1}removeEventListener(t,s){if(this._listeners===void 0)return;const e=this._listeners[t];if(e!==void 0){const r=e.indexOf(s);r!==-1&&e.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const e=i.slice(0);for(let r=0,n=e.length;r<n;r++)e[r].call(this,t);t.target=null}}}const Ot=new L,Ut=new nt;class at{constructor(t=0,s=0,i=0,e=at.DefaultOrder){this._x=t,this._y=s,this._z=i,this._order=e}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,s,i,e=this._order){return this._x=t,this._y=s,this._z=i,this._order=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,s=this._order,i=!0){const e=t.elements,r=e[0],n=e[4],h=e[8],u=e[1],o=e[5],a=e[9],l=e[2],c=e[6],x=e[10];switch(s){case"XYZ":this._y=Math.asin(U(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-a,x),this._z=Math.atan2(-n,r)):(this._x=Math.atan2(c,o),this._z=0);break;case"YXZ":this._x=Math.asin(-U(a,-1,1)),Math.abs(a)<.9999999?(this._y=Math.atan2(h,x),this._z=Math.atan2(u,o)):(this._y=Math.atan2(-l,r),this._z=0);break;case"ZXY":this._x=Math.asin(U(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(-l,x),this._z=Math.atan2(-n,o)):(this._y=0,this._z=Math.atan2(u,r));break;case"ZYX":this._y=Math.asin(-U(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(c,x),this._z=Math.atan2(u,r)):(this._x=0,this._z=Math.atan2(-n,o));break;case"YZX":this._z=Math.asin(U(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-a,o),this._y=Math.atan2(-l,r)):(this._x=0,this._y=Math.atan2(h,x));break;case"XZY":this._z=Math.asin(-U(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(c,o),this._y=Math.atan2(h,r)):(this._x=Math.atan2(-a,x),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+s)}return this._order=s,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,s,i){return Ot.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Ot,s,i)}setFromVector3(t,s=this._order){return this.set(t.x,t.y,t.z,s)}reorder(t){return Ut.setFromEuler(this),this.setFromQuaternion(Ut,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new y(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}at.prototype.isEuler=!0;at.DefaultOrder="XYZ";at.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class hs{constructor(){this.mask=1|0}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=4294967295|0}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!=0}isEnabled(t){return(this.mask&(1<<t|0))!=0}}class Rt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,s,i,e,r,n,h,u,o){const a=this.elements;return a[0]=t,a[1]=e,a[2]=h,a[3]=s,a[4]=r,a[5]=u,a[6]=i,a[7]=n,a[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],this}extractBasis(t,s,i){return t.setFromMatrix3Column(this,0),s.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const s=t.elements;return this.set(s[0],s[4],s[8],s[1],s[5],s[9],s[2],s[6],s[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,e=s.elements,r=this.elements,n=i[0],h=i[3],u=i[6],o=i[1],a=i[4],l=i[7],c=i[2],x=i[5],m=i[8],d=e[0],p=e[3],f=e[6],_=e[1],F=e[4],M=e[7],b=e[2],A=e[5],z=e[8];return r[0]=n*d+h*_+u*b,r[3]=n*p+h*F+u*A,r[6]=n*f+h*M+u*z,r[1]=o*d+a*_+l*b,r[4]=o*p+a*F+l*A,r[7]=o*f+a*M+l*z,r[2]=c*d+x*_+m*b,r[5]=c*p+x*F+m*A,r[8]=c*f+x*M+m*z,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=t,s[4]*=t,s[7]*=t,s[2]*=t,s[5]*=t,s[8]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],n=t[4],h=t[5],u=t[6],o=t[7],a=t[8];return s*n*a-s*h*o-i*r*a+i*h*u+e*r*o-e*n*u}invert(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],n=t[4],h=t[5],u=t[6],o=t[7],a=t[8],l=a*n-h*o,c=h*u-a*r,x=o*r-n*u,m=s*l+i*c+e*x;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const d=1/m;return t[0]=l*d,t[1]=(e*o-a*i)*d,t[2]=(h*i-e*n)*d,t[3]=c*d,t[4]=(a*s-e*u)*d,t[5]=(e*r-h*s)*d,t[6]=x*d,t[7]=(i*u-o*s)*d,t[8]=(n*s-i*r)*d,this}transpose(){let t;const s=this.elements;return t=s[1],s[1]=s[3],s[3]=t,t=s[2],s[2]=s[6],s[6]=t,t=s[5],s[5]=s[7],s[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const s=this.elements;return t[0]=s[0],t[1]=s[3],t[2]=s[6],t[3]=s[1],t[4]=s[4],t[5]=s[7],t[6]=s[2],t[7]=s[5],t[8]=s[8],this}setUvTransform(t,s,i,e,r,n,h){const u=Math.cos(r),o=Math.sin(r);return this.set(i*u,i*o,-i*(u*n+o*h)+n+t,-e*o,e*u,-e*(-o*n+u*h)+h+s,0,0,1),this}scale(t,s){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=s,i[4]*=s,i[7]*=s,this}rotate(t){const s=Math.cos(t),i=Math.sin(t),e=this.elements,r=e[0],n=e[3],h=e[6],u=e[1],o=e[4],a=e[7];return e[0]=s*r+i*u,e[3]=s*n+i*o,e[6]=s*h+i*a,e[1]=-i*r+s*u,e[4]=-i*n+s*o,e[7]=-i*h+s*a,this}translate(t,s){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=s*i[2],i[4]+=s*i[5],i[7]+=s*i[8],this}equals(t){const s=this.elements,i=t.elements;for(let e=0;e<9;e++)if(s[e]!==i[e])return!1;return!0}fromArray(t,s=0){for(let i=0;i<9;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}Rt.prototype.isMatrix3=!0;let as=0;const Lt=new y,ot=new nt,G=new L,wt=new y,ft=new y,os=new y,us=new nt,Gt=new y(1,0,0),jt=new y(0,1,0),Qt=new y(0,0,1),ls={type:"added"},Jt={type:"removed"};class st extends Wt{constructor(){super();Object.defineProperty(this,"id",{value:as++}),this.uuid=Pt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=st.DefaultUp.clone();const t=new y,s=new at,i=new nt,e=new y(1,1,1);function r(){i.setFromEuler(s,!1)}function n(){s.setFromQuaternion(i,void 0,!1)}s._onChange(r),i._onChange(n),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:s},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:e},modelViewMatrix:{value:new L},normalMatrix:{value:new Rt}}),this.matrix=new L,this.matrixWorld=new L,this.matrixAutoUpdate=st.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new hs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,s){this.quaternion.setFromAxisAngle(t,s)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,s){return ot.setFromAxisAngle(t,s),this.quaternion.multiply(ot),this}rotateOnWorldAxis(t,s){return ot.setFromAxisAngle(t,s),this.quaternion.premultiply(ot),this}rotateX(t){return this.rotateOnAxis(Gt,t)}rotateY(t){return this.rotateOnAxis(jt,t)}rotateZ(t){return this.rotateOnAxis(Qt,t)}translateOnAxis(t,s){return Lt.copy(t).applyQuaternion(this.quaternion),this.position.add(Lt.multiplyScalar(s)),this}translateX(t){return this.translateOnAxis(Gt,t)}translateY(t){return this.translateOnAxis(jt,t)}translateZ(t){return this.translateOnAxis(Qt,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(G.copy(this.matrixWorld).invert())}lookAt(t,s,i){t.isVector3?wt.copy(t):wt.set(t,s,i);const e=this.parent;this.updateWorldMatrix(!0,!1),ft.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?G.lookAt(ft,wt,this.up):G.lookAt(wt,ft,this.up),this.quaternion.setFromRotationMatrix(G),e&&(G.extractRotation(e.matrixWorld),ot.setFromRotationMatrix(G),this.quaternion.premultiply(ot.invert()))}add(t){if(arguments.length>1){for(let s=0;s<arguments.length;s++)this.add(arguments[s]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ls)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const s=this.children.indexOf(t);return s!==-1&&(t.parent=null,this.children.splice(s,1),t.dispatchEvent(Jt)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const s=this.children[t];s.parent=null,s.dispatchEvent(Jt)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),G.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),G.multiply(t.parent.matrixWorld)),t.applyMatrix4(G),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,s){if(this[t]===s)return this;for(let i=0,e=this.children.length;i<e;i++){const n=this.children[i].getObjectByProperty(t,s);if(n!==void 0)return n}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ft,t,os),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ft,us,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const s=this.matrixWorld.elements;return t.set(s[8],s[9],s[10]).normalize()}raycast(){}traverse(t){t(this);const s=this.children;for(let i=0,e=s.length;i<e;i++)s[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const s=this.children;for(let i=0,e=s.length;i<e;i++)s[i].traverseVisible(t)}traverseAncestors(t){const s=this.parent;s!==null&&(t(s),s.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const s=this.children;for(let i=0,e=s.length;i<e;i++)s[i].updateMatrixWorld(t)}updateWorldMatrix(t,s){const i=this.parent;if(t===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),s===!0){const e=this.children;for(let r=0,n=e.length;r<n;r++)e[r].updateWorldMatrix(!1,!0)}}toJSON(t){const s=t===void 0||typeof t=="string",i={};s&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const e={};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.castShadow===!0&&(e.castShadow=!0),this.receiveShadow===!0&&(e.receiveShadow=!0),this.visible===!1&&(e.visible=!1),this.frustumCulled===!1&&(e.frustumCulled=!1),this.renderOrder!==0&&(e.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(e.userData=this.userData),e.layers=this.layers.mask,e.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(e.matrixAutoUpdate=!1),this.isInstancedMesh&&(e.type="InstancedMesh",e.count=this.count,e.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(e.instanceColor=this.instanceColor.toJSON()));function r(h,u){return h[u.uuid]===void 0&&(h[u.uuid]=u.toJSON(t)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?e.background=this.background.toJSON():this.background.isTexture&&(e.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(e.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){e.geometry=r(t.geometries,this.geometry);const h=this.geometry.parameters;if(h!==void 0&&h.shapes!==void 0){const u=h.shapes;if(Array.isArray(u))for(let o=0,a=u.length;o<a;o++){const l=u[o];r(t.shapes,l)}else r(t.shapes,u)}}if(this.isSkinnedMesh&&(e.bindMode=this.bindMode,e.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),e.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const h=[];for(let u=0,o=this.material.length;u<o;u++)h.push(r(t.materials,this.material[u]));e.material=h}else e.material=r(t.materials,this.material);if(this.children.length>0){e.children=[];for(let h=0;h<this.children.length;h++)e.children.push(this.children[h].toJSON(t).object)}if(this.animations.length>0){e.animations=[];for(let h=0;h<this.animations.length;h++){const u=this.animations[h];e.animations.push(r(t.animations,u))}}if(s){const h=n(t.geometries),u=n(t.materials),o=n(t.textures),a=n(t.images),l=n(t.shapes),c=n(t.skeletons),x=n(t.animations);h.length>0&&(i.geometries=h),u.length>0&&(i.materials=u),o.length>0&&(i.textures=o),a.length>0&&(i.images=a),l.length>0&&(i.shapes=l),c.length>0&&(i.skeletons=c),x.length>0&&(i.animations=x)}return i.object=e,i;function n(h){const u=[];for(const o in h){const a=h[o];delete a.metadata,u.push(a)}return u}}clone(t){return new this.constructor().copy(this,t)}copy(t,s=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),s===!0)for(let i=0;i<t.children.length;i++){const e=t.children[i];this.add(e.clone())}return this}}st.DefaultUp=new y(0,1,0);st.DefaultMatrixAutoUpdate=!0;st.prototype.isObject3D=!0;class ut{constructor(t=0,s=0){this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,s){return s!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t,s){return s!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,i=this.y,e=t.elements;return this.x=e[0]*s+e[3]*i+e[6],this.y=e[1]*s+e[4]*i+e[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y;return s*s+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}fromBufferAttribute(t,s,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this}rotateAround(t,s){const i=Math.cos(s),e=Math.sin(s),r=this.x-t.x,n=this.y-t.y;return this.x=r*i-n*e+t.x,this.y=r*e+n*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ut.prototype.isVector2=!0;class lt{constructor(t=new y(1/0,1/0,1/0),s=new y(-1/0,-1/0,-1/0)){this.min=t,this.max=s}set(t,s){return this.min.copy(t),this.max.copy(s),this}setFromArray(t){let s=1/0,i=1/0,e=1/0,r=-1/0,n=-1/0,h=-1/0;for(let u=0,o=t.length;u<o;u+=3){const a=t[u],l=t[u+1],c=t[u+2];a<s&&(s=a),l<i&&(i=l),c<e&&(e=c),a>r&&(r=a),l>n&&(n=l),c>h&&(h=c)}return this.min.set(s,i,e),this.max.set(r,n,h),this}setFromBufferAttribute(t){let s=1/0,i=1/0,e=1/0,r=-1/0,n=-1/0,h=-1/0;for(let u=0,o=t.count;u<o;u++){const a=t.getX(u),l=t.getY(u),c=t.getZ(u);a<s&&(s=a),l<i&&(i=l),c<e&&(e=c),a>r&&(r=a),l>n&&(n=l),c>h&&(h=c)}return this.min.set(s,i,e),this.max.set(r,n,h),this}setFromPoints(t){this.makeEmpty();for(let s=0,i=t.length;s<i;s++)this.expandByPoint(t[s]);return this}setFromCenterAndSize(t,s){const i=pt.copy(s).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const s=t.geometry;s!==void 0&&(s.boundingBox===null&&s.computeBoundingBox(),Tt.copy(s.boundingBox),Tt.applyMatrix4(t.matrixWorld),this.union(Tt));const i=t.children;for(let e=0,r=i.length;e<r;e++)this.expandByObject(i[e]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,s){return s.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,pt),pt.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let s,i;return t.normal.x>0?(s=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(s=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(s+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(s+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(s+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(s+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),s<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(gt),_t.subVectors(this.max,gt),ct.subVectors(t.a,gt),xt.subVectors(t.b,gt),mt.subVectors(t.c,gt),$.subVectors(xt,ct),v.subVectors(mt,xt),it.subVectors(ct,mt);let s=[0,-$.z,$.y,0,-v.z,v.y,0,-it.z,it.y,$.z,0,-$.x,v.z,0,-v.x,it.z,0,-it.x,-$.y,$.x,0,-v.y,v.x,0,-it.y,it.x,0];return!Dt(s,ct,xt,mt,_t)||(s=[1,0,0,0,1,0,0,0,1],!Dt(s,ct,xt,mt,_t))?!1:(At.crossVectors($,v),s=[At.x,At.y,At.z],Dt(s,ct,xt,mt,_t))}clampPoint(t,s){return s.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return pt.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(pt).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(j[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),j[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),j[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),j[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),j[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),j[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),j[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),j[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(j),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}lt.prototype.isBox3=!0;const j=[new y,new y,new y,new y,new y,new y,new y,new y],pt=new y,Tt=new lt,ct=new y,xt=new y,mt=new y,$=new y,v=new y,it=new y,gt=new y,_t=new y,At=new y,et=new y;function Dt(g,t,s,i,e){for(let r=0,n=g.length-3;r<=n;r+=3){et.fromArray(g,r);const h=e.x*Math.abs(et.x)+e.y*Math.abs(et.y)+e.z*Math.abs(et.z),u=t.dot(et),o=s.dot(et),a=i.dot(et);if(Math.max(-Math.max(u,o,a),Math.min(u,o,a))>h)return!1}return!0}class $t{constructor(t=0,s=0,i=0,e=1){this.x=t,this.y=s,this.z=i,this.w=e}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,s,i,e){return this.x=t,this.y=s,this.z=i,this.w=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;case 3:this.w=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t,s){return s!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this.w=t.w+s.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t,s){return s!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this.w=t.w-s.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const s=this.x,i=this.y,e=this.z,r=this.w,n=t.elements;return this.x=n[0]*s+n[4]*i+n[8]*e+n[12]*r,this.y=n[1]*s+n[5]*i+n[9]*e+n[13]*r,this.z=n[2]*s+n[6]*i+n[10]*e+n[14]*r,this.w=n[3]*s+n[7]*i+n[11]*e+n[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const s=Math.sqrt(1-t.w*t.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/s,this.y=t.y/s,this.z=t.z/s),this}setAxisAngleFromRotationMatrix(t){let s,i,e,r;const n=.01,h=.1,u=t.elements,o=u[0],a=u[4],l=u[8],c=u[1],x=u[5],m=u[9],d=u[2],p=u[6],f=u[10];if(Math.abs(a-c)<n&&Math.abs(l-d)<n&&Math.abs(m-p)<n){if(Math.abs(a+c)<h&&Math.abs(l+d)<h&&Math.abs(m+p)<h&&Math.abs(o+x+f-3)<h)return this.set(1,0,0,0),this;s=Math.PI;const F=(o+1)/2,M=(x+1)/2,b=(f+1)/2,A=(a+c)/4,z=(l+d)/4,V=(m+p)/4;return F>M&&F>b?F<n?(i=0,e=.707106781,r=.707106781):(i=Math.sqrt(F),e=A/i,r=z/i):M>b?M<n?(i=.707106781,e=0,r=.707106781):(e=Math.sqrt(M),i=A/e,r=V/e):b<n?(i=.707106781,e=.707106781,r=0):(r=Math.sqrt(b),i=z/r,e=V/r),this.set(i,e,r,s),this}let _=Math.sqrt((p-m)*(p-m)+(l-d)*(l-d)+(c-a)*(c-a));return Math.abs(_)<.001&&(_=1),this.x=(p-m)/_,this.y=(l-d)/_,this.z=(c-a)/_,this.w=Math.acos((o+x+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this.w=Math.max(t.w,Math.min(s.w,this.w)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this.w=Math.max(t,Math.min(s,this.w)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this.w+=(t.w-this.w)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this.w=t.w+(s.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this.w=t[s+3],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t[s+3]=this.w,t}fromBufferAttribute(t,s,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this.w=t.getW(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}$t.prototype.isVector4=!0;const vt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},P={h:0,s:0,l:0},Ft={h:0,s:0,l:0};function qt(g,t,s){return s<0&&(s+=1),s>1&&(s-=1),s<1/6?g+(t-g)*6*s:s<1/2?t:s<2/3?g+(t-g)*6*(2/3-s):g}function Vt(g){return g<.04045?g*.0773993808:Math.pow(g*.9478672986+.0521327014,2.4)}function It(g){return g<.0031308?g*12.92:1.055*Math.pow(g,.41666)-.055}class dt{constructor(t,s,i){return s===void 0&&i===void 0?this.set(t):this.setRGB(t,s,i)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,this}setRGB(t,s,i){return this.r=t,this.g=s,this.b=i,this}setHSL(t,s,i){if(t=es(t,1),s=U(s,0,1),i=U(i,0,1),s===0)this.r=this.g=this.b=i;else{const e=i<=.5?i*(1+s):i+s-i*s,r=2*i-e;this.r=qt(r,e,t+1/3),this.g=qt(r,e,t),this.b=qt(r,e,t-1/3)}return this}setStyle(t){function s(e){e!==void 0&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let e;const r=i[1],n=i[2];switch(r){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,s(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,s(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n)){const h=parseFloat(e[1])/360,u=parseInt(e[2],10)/100,o=parseInt(e[3],10)/100;return s(e[4]),this.setHSL(h,u,o)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const e=i[1],r=e.length;if(r===3)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(r===6)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const s=vt[t.toLowerCase()];return s!==void 0?this.setHex(s):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,s=2){return this.r=Math.pow(t.r,s),this.g=Math.pow(t.g,s),this.b=Math.pow(t.b,s),this}copyLinearToGamma(t,s=2){const i=s>0?1/s:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Vt(t.r),this.g=Vt(t.g),this.b=Vt(t.b),this}copyLinearToSRGB(t){return this.r=It(t.r),this.g=It(t.g),this.b=It(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const s=this.r,i=this.g,e=this.b,r=Math.max(s,i,e),n=Math.min(s,i,e);let h,u;const o=(n+r)/2;if(n===r)h=0,u=0;else{const a=r-n;switch(u=o<=.5?a/(r+n):a/(2-r-n),r){case s:h=(i-e)/a+(i<e?6:0);break;case i:h=(e-s)/a+2;break;case e:h=(s-i)/a+4;break}h/=6}return t.h=h,t.s=u,t.l=o,t}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(t,s,i){return this.getHSL(P),P.h+=t,P.s+=s,P.l+=i,this.setHSL(P.h,P.s,P.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,s){return this.r=t.r+s.r,this.g=t.g+s.g,this.b=t.b+s.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,s){return this.r+=(t.r-this.r)*s,this.g+=(t.g-this.g)*s,this.b+=(t.b-this.b)*s,this}lerpColors(t,s,i){return this.r=t.r+(s.r-t.r)*i,this.g=t.g+(s.g-t.g)*i,this.b=t.b+(s.b-t.b)*i,this}lerpHSL(t,s){this.getHSL(P),t.getHSL(Ft);const i=Ct(P.h,Ft.h,s),e=Ct(P.s,Ft.s,s),r=Ct(P.l,Ft.l,s);return this.setHSL(i,e,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,s=0){return this.r=t[s],this.g=t[s+1],this.b=t[s+2],this}toArray(t=[],s=0){return t[s]=this.r,t[s+1]=this.g,t[s+2]=this.b,t}fromBufferAttribute(t,s){return this.r=t.getX(s),this.g=t.getY(s),this.b=t.getZ(s),t.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}dt.NAMES=vt;dt.prototype.isColor=!0;dt.prototype.r=1;dt.prototype.g=1;dt.prototype.b=1;const Kt=35044,S=new y,St=new ut;class K{constructor(t,s,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=s,this.count=t!==void 0?t.length/s:0,this.normalized=i===!0,this.usage=Kt,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,s,i){t*=this.itemSize,i*=s.itemSize;for(let e=0,r=this.itemSize;e<r;e++)this.array[t+e]=s.array[i+e];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const s=this.array;let i=0;for(let e=0,r=t.length;e<r;e++){let n=t[e];n===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",e),n=new dt),s[i++]=n.r,s[i++]=n.g,s[i++]=n.b}return this}copyVector2sArray(t){const s=this.array;let i=0;for(let e=0,r=t.length;e<r;e++){let n=t[e];n===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",e),n=new ut),s[i++]=n.x,s[i++]=n.y}return this}copyVector3sArray(t){const s=this.array;let i=0;for(let e=0,r=t.length;e<r;e++){let n=t[e];n===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",e),n=new y),s[i++]=n.x,s[i++]=n.y,s[i++]=n.z}return this}copyVector4sArray(t){const s=this.array;let i=0;for(let e=0,r=t.length;e<r;e++){let n=t[e];n===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",e),n=new $t),s[i++]=n.x,s[i++]=n.y,s[i++]=n.z,s[i++]=n.w}return this}applyMatrix3(t){if(this.itemSize===2)for(let s=0,i=this.count;s<i;s++)St.fromBufferAttribute(this,s),St.applyMatrix3(t),this.setXY(s,St.x,St.y);else if(this.itemSize===3)for(let s=0,i=this.count;s<i;s++)S.fromBufferAttribute(this,s),S.applyMatrix3(t),this.setXYZ(s,S.x,S.y,S.z);return this}applyMatrix4(t){for(let s=0,i=this.count;s<i;s++)S.x=this.getX(s),S.y=this.getY(s),S.z=this.getZ(s),S.applyMatrix4(t),this.setXYZ(s,S.x,S.y,S.z);return this}applyNormalMatrix(t){for(let s=0,i=this.count;s<i;s++)S.x=this.getX(s),S.y=this.getY(s),S.z=this.getZ(s),S.applyNormalMatrix(t),this.setXYZ(s,S.x,S.y,S.z);return this}transformDirection(t){for(let s=0,i=this.count;s<i;s++)S.x=this.getX(s),S.y=this.getY(s),S.z=this.getZ(s),S.transformDirection(t),this.setXYZ(s,S.x,S.y,S.z);return this}set(t,s=0){return this.array.set(t,s),this}getX(t){return this.array[t*this.itemSize]}setX(t,s){return this.array[t*this.itemSize]=s,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,s){return this.array[t*this.itemSize+1]=s,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,s){return this.array[t*this.itemSize+2]=s,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,s){return this.array[t*this.itemSize+3]=s,this}setXY(t,s,i){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=i,this}setXYZ(t,s,i,e){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=i,this.array[t+2]=e,this}setXYZW(t,s,i,e,r){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=i,this.array[t+2]=e,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Kt&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}}K.prototype.isBufferAttribute=!0;class cs extends K{constructor(t,s,i){super(new Uint16Array(t),s,i)}}class xs extends K{constructor(t,s,i){super(new Uint32Array(t),s,i)}}class ms extends K{constructor(t,s,i){super(new Uint16Array(t),s,i)}}ms.prototype.isFloat16BufferAttribute=!0;class Bt extends K{constructor(t,s,i){super(new Float32Array(t),s,i)}}const ds=new lt,ts=new y,Xt=new y,Ht=new y;class ys{constructor(t=new y,s=-1){this.center=t,this.radius=s}set(t,s){return this.center.copy(t),this.radius=s,this}setFromPoints(t,s){const i=this.center;s!==void 0?i.copy(s):ds.setFromPoints(t).getCenter(i);let e=0;for(let r=0,n=t.length;r<n;r++)e=Math.max(e,i.distanceToSquared(t[r]));return this.radius=Math.sqrt(e),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const s=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=s*s}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,s){const i=this.center.distanceToSquared(t);return s.copy(t),i>this.radius*this.radius&&(s.sub(this.center).normalize(),s.multiplyScalar(this.radius).add(this.center)),s}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Ht.subVectors(t,this.center);const s=Ht.lengthSq();if(s>this.radius*this.radius){const i=Math.sqrt(s),e=(i-this.radius)*.5;this.center.add(Ht.multiplyScalar(e/i)),this.radius+=e}return this}union(t){return Xt.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(ts.copy(t.center).add(Xt)),this.expandByPoint(ts.copy(t.center).sub(Xt)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}function fs(g){if(g.length===0)return-1/0;let t=g[0];for(let s=1,i=g.length;s<i;++s)g[s]>t&&(t=g[s]);return t}let ps=0;const Z=new L,Zt=new st,yt=new y,H=new lt,zt=new lt,R=new y;class Et extends Wt{constructor(){super();Object.defineProperty(this,"id",{value:ps++}),this.uuid=Pt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(fs(t)>65535?xs:cs)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,s){return this.attributes[t]=s,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,s,i=0){this.groups.push({start:t,count:s,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,s){this.drawRange.start=t,this.drawRange.count=s}applyMatrix4(t){const s=this.attributes.position;s!==void 0&&(s.applyMatrix4(t),s.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const r=new Rt().getNormalMatrix(t);i.applyNormalMatrix(r),i.needsUpdate=!0}const e=this.attributes.tangent;return e!==void 0&&(e.transformDirection(t),e.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Z.makeRotationFromQuaternion(t),this.applyMatrix4(Z),this}rotateX(t){return Z.makeRotationX(t),this.applyMatrix4(Z),this}rotateY(t){return Z.makeRotationY(t),this.applyMatrix4(Z),this}rotateZ(t){return Z.makeRotationZ(t),this.applyMatrix4(Z),this}translate(t,s,i){return Z.makeTranslation(t,s,i),this.applyMatrix4(Z),this}scale(t,s,i){return Z.makeScale(t,s,i),this.applyMatrix4(Z),this}lookAt(t){return Zt.lookAt(t),Zt.updateMatrix(),this.applyMatrix4(Zt.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(yt).negate(),this.translate(yt.x,yt.y,yt.z),this}setFromPoints(t){const s=[];for(let i=0,e=t.length;i<e;i++){const r=t[i];s.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Bt(s,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new lt);const t=this.attributes.position,s=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new y(-1/0,-1/0,-1/0),new y(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),s)for(let i=0,e=s.length;i<e;i++){const r=s[i];H.setFromBufferAttribute(r),this.morphTargetsRelative?(R.addVectors(this.boundingBox.min,H.min),this.boundingBox.expandByPoint(R),R.addVectors(this.boundingBox.max,H.max),this.boundingBox.expandByPoint(R)):(this.boundingBox.expandByPoint(H.min),this.boundingBox.expandByPoint(H.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ys);const t=this.attributes.position,s=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new y,1/0);return}if(t){const i=this.boundingSphere.center;if(H.setFromBufferAttribute(t),s)for(let r=0,n=s.length;r<n;r++){const h=s[r];zt.setFromBufferAttribute(h),this.morphTargetsRelative?(R.addVectors(H.min,zt.min),H.expandByPoint(R),R.addVectors(H.max,zt.max),H.expandByPoint(R)):(H.expandByPoint(zt.min),H.expandByPoint(zt.max))}H.getCenter(i);let e=0;for(let r=0,n=t.count;r<n;r++)R.fromBufferAttribute(t,r),e=Math.max(e,i.distanceToSquared(R));if(s)for(let r=0,n=s.length;r<n;r++){const h=s[r],u=this.morphTargetsRelative;for(let o=0,a=h.count;o<a;o++)R.fromBufferAttribute(h,o),u&&(yt.fromBufferAttribute(t,o),R.add(yt)),e=Math.max(e,i.distanceToSquared(R))}this.boundingSphere.radius=Math.sqrt(e),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,s=this.attributes;if(t===null||s.position===void 0||s.normal===void 0||s.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.array,e=s.position.array,r=s.normal.array,n=s.uv.array,h=e.length/3;s.tangent===void 0&&this.setAttribute("tangent",new K(new Float32Array(4*h),4));const u=s.tangent.array,o=[],a=[];for(let w=0;w<h;w++)o[w]=new y,a[w]=new y;const l=new y,c=new y,x=new y,m=new ut,d=new ut,p=new ut,f=new y,_=new y;function F(w,E,C){l.fromArray(e,w*3),c.fromArray(e,E*3),x.fromArray(e,C*3),m.fromArray(n,w*2),d.fromArray(n,E*2),p.fromArray(n,C*2),c.sub(l),x.sub(l),d.sub(m),p.sub(m);const k=1/(d.x*p.y-p.x*d.y);!isFinite(k)||(f.copy(c).multiplyScalar(p.y).addScaledVector(x,-d.y).multiplyScalar(k),_.copy(x).multiplyScalar(d.x).addScaledVector(c,-p.x).multiplyScalar(k),o[w].add(f),o[E].add(f),o[C].add(f),a[w].add(_),a[E].add(_),a[C].add(_))}let M=this.groups;M.length===0&&(M=[{start:0,count:i.length}]);for(let w=0,E=M.length;w<E;++w){const C=M[w],k=C.start,W=C.count;for(let B=k,O=k+W;B<O;B+=3)F(i[B+0],i[B+1],i[B+2])}const b=new y,A=new y,z=new y,V=new y;function Y(w){z.fromArray(r,w*3),V.copy(z);const E=o[w];b.copy(E),b.sub(z.multiplyScalar(z.dot(E))).normalize(),A.crossVectors(V,E);const k=A.dot(a[w])<0?-1:1;u[w*4]=b.x,u[w*4+1]=b.y,u[w*4+2]=b.z,u[w*4+3]=k}for(let w=0,E=M.length;w<E;++w){const C=M[w],k=C.start,W=C.count;for(let B=k,O=k+W;B<O;B+=3)Y(i[B+0]),Y(i[B+1]),Y(i[B+2])}}computeVertexNormals(){const t=this.index,s=this.getAttribute("position");if(s!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new K(new Float32Array(s.count*3),3),this.setAttribute("normal",i);else for(let c=0,x=i.count;c<x;c++)i.setXYZ(c,0,0,0);const e=new y,r=new y,n=new y,h=new y,u=new y,o=new y,a=new y,l=new y;if(t)for(let c=0,x=t.count;c<x;c+=3){const m=t.getX(c+0),d=t.getX(c+1),p=t.getX(c+2);e.fromBufferAttribute(s,m),r.fromBufferAttribute(s,d),n.fromBufferAttribute(s,p),a.subVectors(n,r),l.subVectors(e,r),a.cross(l),h.fromBufferAttribute(i,m),u.fromBufferAttribute(i,d),o.fromBufferAttribute(i,p),h.add(a),u.add(a),o.add(a),i.setXYZ(m,h.x,h.y,h.z),i.setXYZ(d,u.x,u.y,u.z),i.setXYZ(p,o.x,o.y,o.z)}else for(let c=0,x=s.count;c<x;c+=3)e.fromBufferAttribute(s,c+0),r.fromBufferAttribute(s,c+1),n.fromBufferAttribute(s,c+2),a.subVectors(n,r),l.subVectors(e,r),a.cross(l),i.setXYZ(c+0,a.x,a.y,a.z),i.setXYZ(c+1,a.x,a.y,a.z),i.setXYZ(c+2,a.x,a.y,a.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(t,s){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}s===void 0&&(s=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const e in i){if(t.attributes[e]===void 0)continue;const n=i[e].array,h=t.attributes[e],u=h.array,o=h.itemSize*s,a=Math.min(u.length,n.length-o);for(let l=0,c=o;l<a;l++,c++)n[c]=u[l]}return this}normalizeNormals(){const t=this.attributes.normal;for(let s=0,i=t.count;s<i;s++)R.fromBufferAttribute(t,s),R.normalize(),t.setXYZ(s,R.x,R.y,R.z)}toNonIndexed(){function t(h,u){const o=h.array,a=h.itemSize,l=h.normalized,c=new o.constructor(u.length*a);let x=0,m=0;for(let d=0,p=u.length;d<p;d++){h.isInterleavedBufferAttribute?x=u[d]*h.data.stride+h.offset:x=u[d]*a;for(let f=0;f<a;f++)c[m++]=o[x++]}return new K(c,a,l)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const s=new Et,i=this.index.array,e=this.attributes;for(const h in e){const u=e[h],o=t(u,i);s.setAttribute(h,o)}const r=this.morphAttributes;for(const h in r){const u=[],o=r[h];for(let a=0,l=o.length;a<l;a++){const c=o[a],x=t(c,i);u.push(x)}s.morphAttributes[h]=u}s.morphTargetsRelative=this.morphTargetsRelative;const n=this.groups;for(let h=0,u=n.length;h<u;h++){const o=n[h];s.addGroup(o.start,o.count,o.materialIndex)}return s}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const o in u)u[o]!==void 0&&(t[o]=u[o]);return t}t.data={attributes:{}};const s=this.index;s!==null&&(t.data.index={type:s.array.constructor.name,array:Array.prototype.slice.call(s.array)});const i=this.attributes;for(const u in i){const o=i[u];t.data.attributes[u]=o.toJSON(t.data)}const e={};let r=!1;for(const u in this.morphAttributes){const o=this.morphAttributes[u],a=[];for(let l=0,c=o.length;l<c;l++){const x=o[l];a.push(x.toJSON(t.data))}a.length>0&&(e[u]=a,r=!0)}r&&(t.data.morphAttributes=e,t.data.morphTargetsRelative=this.morphTargetsRelative);const n=this.groups;n.length>0&&(t.data.groups=JSON.parse(JSON.stringify(n)));const h=this.boundingSphere;return h!==null&&(t.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const s={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(s));const e=t.attributes;for(const o in e){const a=e[o];this.setAttribute(o,a.clone(s))}const r=t.morphAttributes;for(const o in r){const a=[],l=r[o];for(let c=0,x=l.length;c<x;c++)a.push(l[c].clone(s));this.morphAttributes[o]=a}this.morphTargetsRelative=t.morphTargetsRelative;const n=t.groups;for(let o=0,a=n.length;o<a;o++){const l=n[o];this.addGroup(l.start,l.count,l.materialIndex)}const h=t.boundingBox;h!==null&&(this.boundingBox=h.clone());const u=t.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Et.prototype.isBufferGeometry=!0;class ss extends Et{constructor(t=1,s=1,i=1,e=1,r=1,n=1){super();this.type="BoxGeometry",this.parameters={width:t,height:s,depth:i,widthSegments:e,heightSegments:r,depthSegments:n};const h=this;e=Math.floor(e),r=Math.floor(r),n=Math.floor(n);const u=[],o=[],a=[],l=[];let c=0,x=0;m("z","y","x",-1,-1,i,s,t,n,r,0),m("z","y","x",1,-1,i,s,-t,n,r,1),m("x","z","y",1,1,t,i,s,e,n,2),m("x","z","y",1,-1,t,i,-s,e,n,3),m("x","y","z",1,-1,t,s,i,e,r,4),m("x","y","z",-1,-1,t,s,-i,e,r,5),this.setIndex(u),this.setAttribute("position",new Bt(o,3)),this.setAttribute("normal",new Bt(a,3)),this.setAttribute("uv",new Bt(l,2));function m(d,p,f,_,F,M,b,A,z,V,Y){const w=M/z,E=b/V,C=M/2,k=b/2,W=A/2,B=z+1,O=V+1;let tt=0,Q=0;const T=new y;for(let q=0;q<O;q++){const I=q*E-k;for(let rt=0;rt<B;rt++){const bt=rt*w-C;T[d]=bt*_,T[p]=I*F,T[f]=W,o.push(T.x,T.y,T.z),T[d]=0,T[p]=0,T[f]=A>0?1:-1,a.push(T.x,T.y,T.z),l.push(rt/z),l.push(1-q/V),tt+=1}}for(let q=0;q<V;q++)for(let I=0;I<z;I++){const rt=c+I+B*q,bt=c+I+B*(q+1),is=c+(I+1)+B*(q+1),Nt=c+(I+1)+B*q;u.push(rt,bt,Nt),u.push(bt,is,Nt),Q+=6}h.addGroup(x,Q,Y),x+=Q,c+=tt}}static fromJSON(t){return new ss(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}export{ss as B,st as O,y as V};
